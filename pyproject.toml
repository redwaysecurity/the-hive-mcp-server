[project]
name = "the-hive-mcp-server"
version = "0.1.0"
description = "Model Context Protocol (MCP) server for The Hive"
authors = [
     { name = "Redway Security", email = "info@redwaysecurity.com" }
]
dependencies = [
    "click==8.2.1",
    "mcp>=1.13.0",
    "thehive4py==2.0.0"
]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "MIT" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["mcp", "thehive", "the-hive", "model-context-protocol"]

[project.optional-dependencies]
dev = [
    "build>=1.2.2.post1",
    "twine>=6.1.0",
    "ruff>=0.11.0",
    "mypy>=1.7.0",
    "safety>=2.3.0",
    "bandit>=1.7.0",
    "radon>=6.0.1"
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0",
    "pytest-html>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "coverage>=7.2.0",
    "faker>=19.0.0",
    "responses>=0.23.0",
]

[project.urls]
Homepage = "https://github.com/redwaysecurity/the-hive-mcp-server"
Repository = "https://github.com/redwaysecurity/the-hive-mcp-server.git"
"Bug Tracker" = "https://github.com/redwaysecurity/the-hive-mcp-server/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
the-hive-mcp-server = "thehive_mcp.main:main"

[tool.hatch.build.targets.wheel]
packages = ["thehive_mcp"]

[tool.hatch.build]
include = [
    "thehive_mcp/**/*.py"
]

[tool.ruff]
select = ["E", "W", "F", "B", "I", "N", "UP", "ANN", "S", "BLE", "FBT", "A", "COM", "C4", "DTZ", "T10", "ISC", "ICN", "G", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["ANN101", "ANN102", "D203", "D213"]
line-length = 120
target-version = "py310"

[tool.ruff.per-file-ignores]
"tests/**/*.py" = ["S101", "ANN", "PLR2004"]
"dev-tools/**/*.py" = ["T201", "S101"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["thehive4py.*", "responses.*", "faker.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["thehive_mcp"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[dependency-groups]
dev = [
    "ruff>=0.11.0",
    "mypy>=1.7.0",
    "safety>=2.3.0",
    "bandit>=1.7.0",
    "radon>=6.0.1",
    "docstring-coverage",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0",
    "pytest-html>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "coverage>=7.2.0",
    "faker>=19.0.0",
    "responses>=0.23.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pylint>=3.0.0",
]

# Black code formatter configuration
[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort import sorting configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["thehive_mcp"]
known_third_party = ["mcp", "thehive4py", "click", "pytest"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Pylint configuration
[tool.pylint.messages_control]
disable = [
    "C0103",  # invalid-name
    "C0114",  # missing-module-docstring  
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0212",  # protected-access
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-args = 10
max-locals = 15
max-returns = 6
max-branches = 12
max-statements = 50